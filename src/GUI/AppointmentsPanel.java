package GUI;

import BL.Doctor;
import BL.Hospital;
import BL.Patient;
import java.sql.SQLException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class AppointmentsPanel extends javax.swing.JPanel {

    private Hospital hospitalManager;
    private DefaultListModel listModelPatients;
    private Patient currentPatient;
    public AppointmentsPanel(Hospital hospital) {
        
        listModelPatients = new DefaultListModel();
        hospitalManager = hospital;
        currentPatient = null;
        initComponents();
        this.setVisible(true);
        
    }
    
    public AppointmentsPanel()
    {
        
        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dateChooserCombo = new datechooser.beans.DateChooserCombo();
        hourSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        confirmkBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        selectedPatientLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientSearchList = new javax.swing.JList<>();
        patientSearchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Date"));
        jPanel1.setPreferredSize(new java.awt.Dimension(232, 238));

        dateChooserCombo.setCurrentView(new datechooser.view.appearance.AppearancesList("Grey",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo.setFormat(0);
    dateChooserCombo.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    hourSpinner.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

    jLabel1.setText("Choose date");

    jLabel2.setText("Choose hour");

    confirmkBtn.setText("Confirm");
    confirmkBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            confirmkBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap(34, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(confirmkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabel1)))
            .addGap(31, 31, 31))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(27, 27, 27)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(dateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(8, 8, 8)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(confirmkBtn)
            .addContainerGap(79, Short.MAX_VALUE))
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

    selectedPatientLbl.setText("Patient not selected");

    patientSearchList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    patientSearchList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            patientSearchListValueChanged(evt);
        }
    });
    jScrollPane1.setViewportView(patientSearchList);

    patientSearchTxt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            patientSearchTxtActionPerformed(evt);
        }
    });

    searchBtn.setText("Search");
    searchBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(selectedPatientLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(patientSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(searchBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(patientSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchBtn))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(selectedPatientLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 15, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void patientSearchListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_patientSearchListValueChanged
        if (!patientSearchList.isSelectionEmpty()) {
            currentPatient = (Patient)listModelPatients.getElementAt(patientSearchList.getSelectedIndex());
            selectedPatientLbl.setText("SELECTED: " + currentPatient.toString());
        }
    }//GEN-LAST:event_patientSearchListValueChanged

    private void patientSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSearchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchTxtActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String search = patientSearchTxt.getText();

        try {
            if(search!=null){
                if(search.trim().length()!= 0){
                    currentPatient = null;
                    selectedPatientLbl.setText("Patient not selected");
                    ArrayList<Patient> searchPatients = hospitalManager.searchPatientByName(search);
                    listModelPatients.clear();

                    for (Patient patient : searchPatients) {
                        listModelPatients.addElement(patient);
                    }
                    patientSearchList.setModel(listModelPatients);
                    patientSearchList.setSelectedIndex(0);
                }
            }

        } catch (SQLException ex) {
            new DBErrorDialog();
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void confirmkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmkBtnActionPerformed
        try {
            if (currentPatient == null || dateChooserCombo.getSelectedDate()==null) {
                return;
            }
            
            //SETTING DATE
            int hour = (Integer)hourSpinner.getValue();
            Calendar selectedValue = (Calendar) dateChooserCombo.getSelectedDate();
            Date selectedDate = selectedValue.getTime();
            LocalDate date = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalTime time = LocalTime.of(hour, 0);
            LocalDateTime ldt = LocalDateTime.of(date, time);
            
            if (ldt.isBefore(LocalDateTime.now())) {
                JOptionPane.showMessageDialog(null, "Cannot choose past time");
                return;
            }
            if (!hospitalManager.isNotBookedByPatient(currentPatient, ldt)) {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
                String formatDateTime = ldt.format(formatter);
                JOptionPane.showMessageDialog(null, currentPatient.getFullName() + " already has appointment booked at "
                        + formatDateTime.toString());
                return;
            }
            
            //DOCTOR APPOINTMENT SEARCH
            boolean myDoctorIsFree = false;
            if (hospitalManager.doctorExists(currentPatient.getDoctor().getID())) {
                myDoctorIsFree = hospitalManager.isDoctorAvailable(currentPatient.getDoctor(), ldt);
            }
             
            if (myDoctorIsFree){
                hospitalManager.setCalendarAppointment(currentPatient, currentPatient.getDoctor(), ldt);
                JOptionPane.showMessageDialog(null,"Appointment confirmed, dr: " + currentPatient.getDoctor().getFullName());
                return;
            }else{
                ArrayList<Doctor> doctors = hospitalManager.getAllDoctors();
                for (Doctor dr:doctors) {
                    if (hospitalManager.isDoctorAvailable(dr, ldt))
                    {
                        hospitalManager.setCalendarAppointment(currentPatient, dr, ldt);
                        JOptionPane.showMessageDialog(null,"Appointment confirmed, dr: "+ dr.getFullName());
                        return;
                    }
                }
            }
            JOptionPane.showMessageDialog(null,"All doctors are busy");
        } catch (SQLException ex) {
            //Logger.getLogger(AppointmentsPanel.class.getName()).log(Level.SEVERE, null, ex);
            new DBErrorDialog();
        }
        
        
        
        
        
    }//GEN-LAST:event_confirmkBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmkBtn;
    private datechooser.beans.DateChooserCombo dateChooserCombo;
    private javax.swing.JSpinner hourSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> patientSearchList;
    private javax.swing.JTextField patientSearchTxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel selectedPatientLbl;
    // End of variables declaration//GEN-END:variables
}
